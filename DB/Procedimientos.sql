create or replace NONEDITIONABLE PROCEDURE RCJNFRJR_INSERT_EMPLOYEE(
    FIRST_NAME_P VARCHAR2 DEFAULT NULL,
    LAST_NAME_P VARCHAR2 DEFAULT NULL,
    SALARY_P NUMBER,
    ACCOUNT_NUMBER_P NUMBER,
    HIRE_DATE_P DATE,
    BANK_NAME_P VARCHAR2,
    ACCOUNT_TYPE_P VARCHAR2,
    JOB_ID_P VARCHAR2
    
)
IS
    
BEGIN
    LOCK TABLE RCJNFRJR_EMPLOYEE,RCJNFRJR_BANK_ACCOUNT IN ROW EXCLUSIVE MODE;

    INSERT INTO RCJNFRJR_BANK_ACCOUNT(ACCOUNT_NUMBER, BANK_NAME, ACCOUNT_TYPE)
        VALUES(ACCOUNT_NUMBER_P, BANK_NAME_P, ACCOUNT_TYPE_P);

    INSERT INTO RCJNFRJR_EMPLOYEE(EMPLOYEE_ID,FIRST_NAME, LAST_NAME, SALARY, HIRE_DATE, ACCOUNT_NUMBER,JOB_ID)
        VALUES(NULL,FIRST_NAME_P, LAST_NAME_P, SALARY_P, HIRE_DATE_P, ACCOUNT_NUMBER_p,JOB_ID_P);

    COMMIT;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20001, 'Datos no encontrados.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM); -- Registrar error
        RAISE_APPLICATION_ERROR(-20010, 'Ocurrió un error inesperado: ' || SQLERRM);
        ROLLBACK;
END;


INSERT INTO RCJNFRJR_BANK_ACCOUNT(ACCOUNT_NUMBER, BANK_NAME, ACCOUNT_TYPE)
    VALUES(12345, 'BANCOESTADO', 'CORRIENTE');

INSERT INTO RCJNFRJR_EMPLOYEE(EMPLOYEE_ID,FIRST_NAME, LAST_NAME, SALARY, HIRE_DATE, ACCOUNT_NUMBER,JOB_ID)
    VALUES(NULL,'Juan1', 'Soto', 500000, SYSDATE, 12345,NULL);




BEGIN
   RCJNFRJR_INSERT_EMPLOYEE(
      'juan1',        -- first_name
      'soto',         -- last_name
      570000,         -- salary (sin punto como separador decimal, si es un número entero)
      SYSDATE,
      'BANCO ESTADO',
      'CUENTA CORRIENTE',
      1234567
   );
END;




--ACTUALIZAR DATOS DEL EMPLEADO
CREATE OR REPLACE PROCEDURE RCJNFRJR_UPDATE_EMPLOYEE(
    EMPLOYEE_ID_P NUMBER,
    FIRST_NAME_P VARCHAR2 DEFAULT NULL,
    LAST_NAME_P VARCHAR2 DEFAULT NULL,
    SALARY_P NUMBER,
    HIRE_DATE_P DATE,
    ACCOUNT_NUMBER_P NUMBER,
    BANK_NAME_P VARCHAR2,
    ACCOUNT_TYPE_P VARCHAR2,
    JOB_ID_P VARCHAR2 DEFAULT NULL
)
IS
    EMPLOYEE_EXISTS NUMBER;
BEGIN
    LOCK TABLE RCJNFRJR_EMPLOYEE, RCJNFRJR_BANK_ACCOUNT IN ROW EXCLUSIVE MODE;

    SELECT COUNT(*) 
    INTO EMPLOYEE_EXISTS
    FROM RCJNFRJR_EMPLOYEE
    WHERE EMPLOYEE_ID = EMPLOYEE_ID_P;

    IF EMPLOYEE_EXISTS = 0 THEN
        RAISE_APPLICATION_ERROR(-20003, 'Empleado no encontrado.');
    end if;

    UPDATE RCJNFRJR_EMPLOYEE SET 
    FIRST_NAME = FIRST_NAME_P,
    LAST_NAME = LAST_NAME_P,
    SALARY = SALARY_P,
    HIRE_DATE = HIRE_DATE_P,
    ACCOUNT_NUMBER = ACCOUNT_NUMBER_P,
    JOB_ID = JOB_ID_P
    WHERE EMPLOYEE_ID = EMPLOYEE_ID_P;


    UPDATE RCJNFRJR_BANK_ACCOUNT SET
    BANK_NAME = BANK_NAME_P,
    ACCOUNT_TYPE = ACCOUNT_TYPE_P
    WHERE ACCOUNT_NUMBER = ACCOUNT_NUMBER_P;

    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20010, 'Ocurrió un error inesperado: ');
    ROLLBACK;
END;




--ELIMINAR TRABAJADOR
CREATE OR REPLACE PROCEDURE RCJNFRJR_DELETE_EMPLOYEE(
    EMPLOYEE_ID_P NUMBER
)
IS
    EMPLOYEE_EXISTS NUMBER;
BEGIN
    LOCK TABLE RCJNFRJR_EMPLOYEE IN ROW EXCLUSIVE MODE;

    SELECT COUNT(*) 
    INTO EMPLOYEE_EXISTS
    FROM RCJNFRJR_EMPLOYEE
    WHERE EMPLOYEE_ID = EMPLOYEE_ID_P;

    IF EMPLOYEE_EXISTS = 0 THEN
        RAISE_APPLICATION_ERROR(-20003, 'Empleado no encontrado.');
    ELSE
        DELETE FROM RCJNFRJR_EMPLOYEE
        WHERE EMPLOYEE_ID = EMPLOYEE_ID_P;
    END IF;
    COMMIT;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20001, 'Datos no encontrados.');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20010, 'Ocurrió un error inesperado: ' || SQLERRM);
    ROLLBACK;
END;




CREATE OR REPLACE PROCEDURE RCJNFRJR_UPDATE_JOBS(
    JOB_ID_P VARCHAR2,
    NEW_JOB_ID_P VARCHAR2 DEFAULT NULL,
    JOB_TITLE_P VARCHAR2 DEFAULT NULL,
    MIN_SALARY_P NUMBER,
    MAX_SALARY_P NUMBER
    
)
IS
    
BEGIN
    LOCK TABLE RCJNFRJR_JOBS IN ROW EXCLUSIVE MODE;

    
        UPDATE RCJNFRJR_JOBS SET 
        JOB_ID = NEW_JOB_ID_P,
        JOB_TITLE = JOB_TITLE_P,
        JOB_MIN_SALARY = MIN_SALARY_P,
        JOB_MAX_SALARY = MAX_SALARY_P
        WHERE JOB_ID = JOB_ID_P;
       
    COMMIT;
    EXCEPTION
         WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20001, 'Datos no encontrados.');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20010, 'Ocurrió un error inesperado: ');
    ROLLBACK;
END;